//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v9.10.57.0 (Newtonsoft.Json v11.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------
'use strict';

Object.defineProperty(exports, '__esModule', {
    value: true
});

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

var SubSection = (function () {
    function SubSection(data) {
        _classCallCheck(this, SubSection);

        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property)) this[property] = data[property];
            }
        }
    }

    _createClass(SubSection, [{
        key: 'init',
        value: function init(data) {
            if (data) {
                this.title = data["Title"];
            }
        }
    }, {
        key: 'toJSON',
        value: function toJSON(data) {
            data = typeof data === 'object' ? data : {};
            data["Title"] = this.title;
            return data;
        }
    }], [{
        key: 'fromJS',
        value: function fromJS(data) {
            data = typeof data === 'object' ? data : {};
            var result = new SubSection();
            result.init(data);
            return result;
        }
    }]);

    return SubSection;
})();

exports.SubSection = SubSection;

var IContent = (function () {
    function IContent(data) {
        _classCallCheck(this, IContent);

        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property)) this[property] = data[property];
            }
        }
        this._discriminator = "IContent";
    }

    _createClass(IContent, [{
        key: 'init',
        value: function init(data) {
            if (data) {}
        }
    }, {
        key: 'toJSON',
        value: function toJSON(data) {
            data = typeof data === 'object' ? data : {};
            data["discriminator"] = this._discriminator;
            return data;
        }
    }], [{
        key: 'fromJS',
        value: function fromJS(data) {
            data = typeof data === 'object' ? data : {};
            if (data["discriminator"] === "TextContent") {
                var result = new TextContent();
                result.init(data);
                return result;
            }
            if (data["discriminator"] === "CodeContent") {
                var result = new CodeContent();
                result.init(data);
                return result;
            }
            if (data["discriminator"] === "ExampleContent") {
                var result = new ExampleContent();
                result.init(data);
                return result;
            }
            if (data["discriminator"] === "ImageContent") {
                var result = new ImageContent();
                result.init(data);
                return result;
            }
            throw new Error("The abstract class 'IContent' cannot be instantiated.");
        }
    }]);

    return IContent;
})();

exports.IContent = IContent;

var TextContent = (function (_IContent) {
    _inherits(TextContent, _IContent);

    function TextContent(data) {
        _classCallCheck(this, TextContent);

        _get(Object.getPrototypeOf(TextContent.prototype), 'constructor', this).call(this, data);
        this._discriminator = "TextContent";
    }

    _createClass(TextContent, [{
        key: 'init',
        value: function init(data) {
            _get(Object.getPrototypeOf(TextContent.prototype), 'init', this).call(this, data);
            if (data) {
                this.text = data["Text"];
            }
        }
    }, {
        key: 'toJSON',
        value: function toJSON(data) {
            data = typeof data === 'object' ? data : {};
            data["Text"] = this.text;
            _get(Object.getPrototypeOf(TextContent.prototype), 'toJSON', this).call(this, data);
            return data;
        }
    }], [{
        key: 'fromJS',
        value: function fromJS(data) {
            data = typeof data === 'object' ? data : {};
            if (data["discriminator"] === "CodeContent") {
                var _result = new CodeContent();
                _result.init(data);
                return _result;
            }
            if (data["discriminator"] === "ExampleContent") {
                var _result2 = new ExampleContent();
                _result2.init(data);
                return _result2;
            }
            var result = new TextContent();
            result.init(data);
            return result;
        }
    }]);

    return TextContent;
})(IContent);

exports.TextContent = TextContent;

var CodeContent = (function (_TextContent) {
    _inherits(CodeContent, _TextContent);

    function CodeContent(data) {
        _classCallCheck(this, CodeContent);

        _get(Object.getPrototypeOf(CodeContent.prototype), 'constructor', this).call(this, data);
        this._discriminator = "CodeContent";
    }

    _createClass(CodeContent, [{
        key: 'init',
        value: function init(data) {
            _get(Object.getPrototypeOf(CodeContent.prototype), 'init', this).call(this, data);
            if (data) {
                this.type = data["Type"];
            }
        }
    }, {
        key: 'toJSON',
        value: function toJSON(data) {
            data = typeof data === 'object' ? data : {};
            data["Type"] = this.type;
            _get(Object.getPrototypeOf(CodeContent.prototype), 'toJSON', this).call(this, data);
            return data;
        }
    }], [{
        key: 'fromJS',
        value: function fromJS(data) {
            data = typeof data === 'object' ? data : {};
            if (data["discriminator"] === "ExampleContent") {
                var _result3 = new ExampleContent();
                _result3.init(data);
                return _result3;
            }
            var result = new CodeContent();
            result.init(data);
            return result;
        }
    }]);

    return CodeContent;
})(TextContent);

exports.CodeContent = CodeContent;

var ExampleContent = (function (_CodeContent) {
    _inherits(ExampleContent, _CodeContent);

    function ExampleContent(data) {
        _classCallCheck(this, ExampleContent);

        _get(Object.getPrototypeOf(ExampleContent.prototype), 'constructor', this).call(this, data);
        this._discriminator = "ExampleContent";
    }

    _createClass(ExampleContent, [{
        key: 'init',
        value: function init(data) {
            _get(Object.getPrototypeOf(ExampleContent.prototype), 'init', this).call(this, data);
            if (data) {}
        }
    }, {
        key: 'toJSON',
        value: function toJSON(data) {
            data = typeof data === 'object' ? data : {};
            _get(Object.getPrototypeOf(ExampleContent.prototype), 'toJSON', this).call(this, data);
            return data;
        }
    }], [{
        key: 'fromJS',
        value: function fromJS(data) {
            data = typeof data === 'object' ? data : {};
            var result = new ExampleContent();
            result.init(data);
            return result;
        }
    }]);

    return ExampleContent;
})(CodeContent);

exports.ExampleContent = ExampleContent;

var ImageContent = (function (_IContent2) {
    _inherits(ImageContent, _IContent2);

    function ImageContent(data) {
        _classCallCheck(this, ImageContent);

        _get(Object.getPrototypeOf(ImageContent.prototype), 'constructor', this).call(this, data);
        this._discriminator = "ImageContent";
    }

    _createClass(ImageContent, [{
        key: 'init',
        value: function init(data) {
            _get(Object.getPrototypeOf(ImageContent.prototype), 'init', this).call(this, data);
            if (data) {
                this.path = data["Path"];
                this.alt = data["Alt"];
            }
        }
    }, {
        key: 'toJSON',
        value: function toJSON(data) {
            data = typeof data === 'object' ? data : {};
            data["Path"] = this.path;
            data["Alt"] = this.alt;
            _get(Object.getPrototypeOf(ImageContent.prototype), 'toJSON', this).call(this, data);
            return data;
        }
    }], [{
        key: 'fromJS',
        value: function fromJS(data) {
            data = typeof data === 'object' ? data : {};
            var result = new ImageContent();
            result.init(data);
            return result;
        }
    }]);

    return ImageContent;
})(IContent);

exports.ImageContent = ImageContent;

var SectionBuilder = (function () {
    function SectionBuilder(data) {
        _classCallCheck(this, SectionBuilder);

        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property)) this[property] = data[property];
            }
        }
    }

    //# sourceMappingURL=sectionbuilder.js.map

    _createClass(SectionBuilder, [{
        key: 'init',
        value: function init(data) {
            if (data) {
                this.title = data["Title"];
                if (data["SubSections"] && data["SubSections"].constructor === Array) {
                    this.subSections = [];
                    var _iteratorNormalCompletion = true;
                    var _didIteratorError = false;
                    var _iteratorError = undefined;

                    try {
                        for (var _iterator = data["SubSections"][Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                            var item = _step.value;

                            this.subSections.push(SubSection.fromJS(item));
                        }
                    } catch (err) {
                        _didIteratorError = true;
                        _iteratorError = err;
                    } finally {
                        try {
                            if (!_iteratorNormalCompletion && _iterator['return']) {
                                _iterator['return']();
                            }
                        } finally {
                            if (_didIteratorError) {
                                throw _iteratorError;
                            }
                        }
                    }
                }
                if (data["Content"] && data["Content"].constructor === Array) {
                    this.content = [];
                    var _iteratorNormalCompletion2 = true;
                    var _didIteratorError2 = false;
                    var _iteratorError2 = undefined;

                    try {
                        for (var _iterator2 = data["Content"][Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
                            var item = _step2.value;

                            this.content.push(IContent.fromJS(item));
                        }
                    } catch (err) {
                        _didIteratorError2 = true;
                        _iteratorError2 = err;
                    } finally {
                        try {
                            if (!_iteratorNormalCompletion2 && _iterator2['return']) {
                                _iterator2['return']();
                            }
                        } finally {
                            if (_didIteratorError2) {
                                throw _iteratorError2;
                            }
                        }
                    }
                }
            }
        }
    }, {
        key: 'toJSON',
        value: function toJSON(data) {
            data = typeof data === 'object' ? data : {};
            data["Title"] = this.title;
            if (this.subSections && this.subSections.constructor === Array) {
                data["SubSections"] = [];
                var _iteratorNormalCompletion3 = true;
                var _didIteratorError3 = false;
                var _iteratorError3 = undefined;

                try {
                    for (var _iterator3 = this.subSections[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
                        var item = _step3.value;

                        data["SubSections"].push(item.toJSON());
                    }
                } catch (err) {
                    _didIteratorError3 = true;
                    _iteratorError3 = err;
                } finally {
                    try {
                        if (!_iteratorNormalCompletion3 && _iterator3['return']) {
                            _iterator3['return']();
                        }
                    } finally {
                        if (_didIteratorError3) {
                            throw _iteratorError3;
                        }
                    }
                }
            }
            if (this.content && this.content.constructor === Array) {
                data["Content"] = [];
                var _iteratorNormalCompletion4 = true;
                var _didIteratorError4 = false;
                var _iteratorError4 = undefined;

                try {
                    for (var _iterator4 = this.content[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
                        var item = _step4.value;

                        data["Content"].push(item.toJSON());
                    }
                } catch (err) {
                    _didIteratorError4 = true;
                    _iteratorError4 = err;
                } finally {
                    try {
                        if (!_iteratorNormalCompletion4 && _iterator4['return']) {
                            _iterator4['return']();
                        }
                    } finally {
                        if (_didIteratorError4) {
                            throw _iteratorError4;
                        }
                    }
                }
            }
            return data;
        }
    }], [{
        key: 'fromJS',
        value: function fromJS(data) {
            data = typeof data === 'object' ? data : {};
            var result = new SectionBuilder();
            result.init(data);
            return result;
        }
    }]);

    return SectionBuilder;
})();

exports.SectionBuilder = SectionBuilder;

